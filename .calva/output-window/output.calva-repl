; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ♥️

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt
; 
; See also the Calva Inspector: https://calva.io/inspector/

PLEASE NOTE
We will update the default location of this file.
The new default location will be
  "<projectRootPath>/.calva/repl.calva-repl"
For now the legacy path is used by default.
To give yourself a smooth transition, you can opt in
to the change, by configuring this setting as false:
  "calva.useLegacyReplWindowPath"
and then add "**/.calva/repl.calva-repl" to your ".gitignore" file.


This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /home/josemorista/Documents/Dev/foss/eboshi; lein update-in :dependencies conj '[nrepl,"1.3.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.55.4"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless)
; Using host:port 127.0.0.1:45535 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉eboshi.core꞉> 
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
clj꞉eboshi.core꞉> 
; Jack-in done.
clj꞉eboshi.core꞉> 
#'eboshi.logic.migrations/runner-spec
clj꞉eboshi.logic.migrations꞉> 
([[:host "localhost"]] [[:password :env/MYSQL_PASSWORD]])
clj꞉eboshi.logic.migrations꞉> 
([[:host "localhost"]] [[:password :env/MYSQL_PASSWORD]])
clj꞉eboshi.logic.migrations꞉> 
; Execution error (IllegalArgumentException) at eboshi.logic.migrations/eval13361 (REPL:21).
; Vector arg to map conj must be a pair
clj꞉eboshi.logic.migrations꞉> 
; Execution error (IllegalArgumentException) at eboshi.logic.migrations/eval13408 (REPL:21).
; No value supplied for key: [[[:host "localhost"]] [[:password :env/MYSQL_PASSWORD]]]
clj꞉eboshi.logic.migrations꞉> 
[[:host "localhost"] [:password :env/MYSQL_PASSWORD]]
clj꞉eboshi.logic.migrations꞉> 
; Execution error (IllegalArgumentException) at eboshi.logic.migrations/eval13416 (REPL:21).
; No value supplied for key: [[:host "localhost"] [:password :env/MYSQL_PASSWORD]]
clj꞉eboshi.logic.migrations꞉> 
[[:host "localhost"] [:password :env/MYSQL_PASSWORD]]
clj꞉eboshi.logic.migrations꞉> 
; Execution error (ArityException) at eboshi.logic.migrations/eval13420 (REPL:21).
; Wrong number of args (1) passed to: clojure.core/zipmap
clj꞉eboshi.logic.migrations꞉> 
{:host "localhost", :password :env/MYSQL_PASSWORD}
clj꞉eboshi.logic.migrations꞉> 
#'eboshi.logic.migrations/env-value?
clj꞉eboshi.logic.migrations꞉> 
false
clj꞉eboshi.logic.migrations꞉> 
"MYSQL_PASSWORD"
clj꞉eboshi.logic.migrations꞉> 
":env/MYSQL_PASSWORD"
clj꞉eboshi.logic.migrations꞉> 
#'eboshi.logic.migrations/env-value?
clj꞉eboshi.logic.migrations꞉> 
false
clj꞉eboshi.logic.migrations꞉> 
#'eboshi.logic.migrations/env-value?
clj꞉eboshi.logic.migrations꞉> 
true
clj꞉eboshi.logic.migrations꞉> 
; Syntax error compiling at (src/eboshi/logic/migrations.clj:27:1).
; Unable to resolve symbol: MYSQL_PASSWORD in this context
clj꞉eboshi.logic.migrations꞉> 
false
clj꞉eboshi.logic.migrations꞉> 
"MYSQL_PASSWORD"
clj꞉eboshi.logic.migrations꞉> 
"MYSQL_PASSWORD"
clj꞉eboshi.logic.migrations꞉> 
"MYSQL_PASSWORD"
clj꞉eboshi.logic.migrations꞉> 
#'eboshi.logic.migrations/parse-runner-config
clj꞉eboshi.logic.migrations꞉> 
{:host "localhost", :password nil}
clj꞉eboshi.logic.migrations꞉> 
; Syntax error compiling at (src/eboshi/services/migrations.clj:63:22).
; No such var: logic.migrations/parse-config-options
clj꞉eboshi.services.migrations꞉> 
nil
clj꞉eboshi.services.migrations꞉> 
; Evaluating file: migrations.clj
#'eboshi.logic.migrations/parse-config-options
clj꞉eboshi.logic.migrations꞉> 
nil
clj꞉eboshi.services.migrations꞉> 
; Syntax error compiling at (src/eboshi/services/migrations.clj:66:39).
; No such var: runners.mysql/make-mysql-migration-runner
clj꞉eboshi.services.migrations꞉> 
; Evaluating file: mysql_migration_runner.clj
#'eboshi.infra.mysql-migration-runner/make-mysql-migration-runner
clj꞉eboshi.infra.mysql-migration-runner꞉> 
#'eboshi.services.migrations/read-config-file
clj꞉eboshi.services.migrations꞉> 
#'eboshi.services.migrations/load-config
clj꞉eboshi.services.migrations꞉> 
clojure.lang.PersistentArrayMap
clj꞉eboshi.models.eboshi꞉> 
clojure.lang.PersistentArrayMap
clj꞉eboshi.models.eboshi꞉> 
#'eboshi.models.eboshi/EboshiConfig
clj꞉eboshi.models.eboshi꞉> 
clojure.lang.PersistentArrayMap
clj꞉eboshi.models.eboshi꞉> 
#'eboshi.models.eboshi/EboshiConfig
clj꞉eboshi.models.eboshi꞉> 
#'eboshi.models.eboshi/EboshiConfig
clj꞉eboshi.models.eboshi꞉> 
nil
clj꞉eboshi.services.eboshi꞉> 
#'eboshi.services.eboshi/load-config
clj꞉eboshi.services.eboshi꞉> 
{:runner :mysql, :config {:migrations-dir "."}, :spec {}}
clj꞉eboshi.services.eboshi꞉> 
; Evaluating file: eboshi.clj
#'eboshi.models.eboshi/EboshiConfig
clj꞉eboshi.models.eboshi꞉> 
nil
clj꞉eboshi.services.eboshi꞉> 
#'eboshi.services.eboshi/init
clj꞉eboshi.services.eboshi꞉> 
#'eboshi.services.eboshi/init
clj꞉eboshi.services.eboshi꞉> 
#'eboshi.services.eboshi/init!
clj꞉eboshi.services.eboshi꞉> 
nil
clj꞉eboshi.services.eboshi꞉> 
nil
clj꞉eboshi.services.eboshi꞉> 
